var tokens = require('@adapt-design-system/tokens');

const makeXmlVar = (value) => `<color>#${value}</color>`;

const mainTemplate = `<?xml version='1.0'?>
{{{COMMENT}}}
<workbook>
    <preferences>
        {{{TEMPLATE}}}
    </preferences>
</workbook>
`;

const paletteTemplate = `
<color-palette name="{{{NAME_TEMPLATE}}}" type="regular">
    {{{CONTENT_TEMPLATE}}}
</color-palette>
`

const comment = `<!--
    CAUTION: DO NOT EDIT THIS FILE DIRECTLY - It is automatically generated.
    ======================================================
    Design Tokens as Tableau TPS. 
    Source: @adapt-design-system/tokens
-->`;

function convertColors() {
    var outputString = '';
    // Map over each 'category' of colors in the palette
    outputString += `\n<!-- Extended Palette -->\n`;
    Object.keys(tokens.ColorPalette).map((category) => {
        const label = category.toLowerCase();
        const swatches = paletteTemplate.replace('{{{NAME_TEMPLATE}}}', `ADAPT Design System Extended ${label}`);
        let values = '';
        tokens.ColorPalette[category].forEach(function (swatch) {
            values += `${makeXmlVar(swatch.hex)}\n`;
        });
        outputString += swatches.replace('{{{CONTENT_TEMPLATE}}}', values);
    });
    return mainTemplate.replace('{{{TEMPLATE}}}', outputString).replace('{{{COMMENT}}}', comment);
}

module.exports = convertColors;
